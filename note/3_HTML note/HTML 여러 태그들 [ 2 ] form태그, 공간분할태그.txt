1.입력 양식(form) 태그 : 
입력 양식은 사용자에게 입력 받는 공간을 의미.
입력 양식을 만들 때 사용하는 태그다. 
입력 양식에 입력된 내용은 서버로 전송되어 구현된 웹 응용 프로그램이 구동되어 데이터베이스와 연동될 것 이다. 

<form 속성1=속성값 속성2=속성값…>
	<input type=”~” name=”전달할파라미터이름”>
…
</form>
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
	<style> td{text-align:center;} </style>
</head>
<body>
<form action="http://www.naver.com" method="get">
	<table>
		<tr><td>아이디</td><td><input type="text" name="id" /></td></tr>
		<tr><td>비 번</td><td><input type="password" name="pw" /></td></tr>
		<tr><td colspan="2"><input type="submit" /></td></tr>
    </table>           
</form>
</body>
</html>

(1)action : 입력 데이터의 전달 위치를 지정

(2)method: 입력 데이터의 전달 방식을 선택 
-get : url에 포함되어 전송(query String 형식)
<name=”n1”/><name=”n2”/>일 때, url에 “?n1=value&n2=value”에 추가.
=> 부연설명.
GET 방식은 URL에 폼 데이터를 추가하여 서버로 전달하는 방식.
GET 방식의 HTTP 요청은 브라우저에 의해 캐시되어(cached) 저장된다.
또한, GET 방식은 보통 쿼리 문자열(query string)에 포함되어 전송되므로, 길이의 제한이 있다.
따라서 보안상 취약점이 존재하므로, 중요한 데이터는 POST 방식을 사용하여 요청하는 것이 좋다.

-post : 입력한 데이터가 눈에 보이지 않게 전송
(url이 아니라 데이터 영역을 이용해서 데이터를 전송하기에 웹브라우저나 서버 상관없이 파라미터 길이 제한이 없다)

=>부연설명
POST 방식은 폼 데이터를 별도로 첨부하여 서버로 전달하는 방식.
POST 방식의 HTTP 요청은 브라우저에 의해 캐시되지 않으므로, 브라우저 히스토리에도 남지 않는다.
또한, POST 방식의 HTTP 요청에 의한 데이터는 쿼리 문자열과는 별도로 전송.
따라서 데이터의 길이에 대한 제한도 없으며, GET 방식보다 보안성이 높다.

(3)button : 버튼을 생성
(4)checkbox : 체크박스을 생성 = 중복선택 가능.
(5)file : 파일 입력 양식을 생성
(6)hidden : 보이지 않게 합니다.
(7)image : 이미지 형태를 생성
(8)password : 비밀번호 입력 양식을 생성
(9)radio : 라디오 버튼을 생성 = 이것을 사용해서 선택박스를 무조건 하나만 고르게 할수있다.
(10)reset : 초기화 버튼을 생성
(11)submit : 제출 버튼을 생성
(12)text : 글자 입력 양식을 생성

/*유효한 코드를 사용하지 않으면, 브라우저는 자체적인 방법으로 코드를 해석 하여 가끔은 개발자가 원하지 않은 결과를 보여주기도 한다.
/*웹 페이지를 올바로 처리하기 위해서는 어떤 DTD(Document Type Definition, 문서 유형 정의)를 사용해야 하는지 브라우저가 알 수 있어야만, HTML 문서 의 유효성 검사가 가능하다.
/*유효성 검사를 하게 되면 개발하고 있는 웹 페이지에 원하는 모습으로 제대로 표현되는지, 
/*아니면 어떤 문제가 있어 웹 문서가 제대로 표현이 안 되고 있는 지 알 수 있기 때문에, 유효성 검사는 아주 중요하다.

(13) autofocus : 포커스 자동 설정 = 해당 칸에 커서가 깜빡거린다.
(14) placeholder : 각 필드에 대한 입력 형식 힌트제공
(15) required : 필수 입력 필드
(16) min, max : 숫자의 범위를 설정
(17) pattern : 조건을 사용한 일반식 표시
쓰이는 것들.
[0-9] : 0~9 사이 중에 숫자들만.
[a-z][A-Z] : 알파벳 중에 하나.
[가-힣] : 한글중 한문자.
{n} : n번 반복.
{n,m} 최소 n번 ~ m 번 사이 반복.  ( 0 < n < m )
\d  : 숫자 [0-9]와 동일.
\w : 문자(숫자,알파벳 포함.)
+ : 1번 이상 반복.
*: 0번 이상 반복. 안나올수도 나올수도
 . : \n 을 제외한 임의의 한 문자 자리수
\. : . 문자



(18) 사용자 인터페이스를 높이기 위한 label이용
= <label> 태그는 사용자 인터페이스(UI) 요소의 라벨(label)을 정의할 때 사용한다.
   <label> 요소는 for 속성을 사용하여 다른 요소와 결합할 수 있으며, 이때 <label> 요소의 for 속성값은 결합하고자 하는 요소의 id 속성값과 같아야 한다.
   또한, <label> 요소를 결합하고자 하는 요소 내부에 위치시키면 for 속성을 사용하지 않더라도 해당 요소와 결합시킬 수 있다.
   이러한 <label> 요소는 브라우저에 의해 일반적인 텍스트로 랜더링되지만,
   사용자가 마우스로 해당 텍스트를 클릭할 경우 <label> 요소와 연결된 요소를 곧바로 선택할 수 있어 사용자의 편의성을 높일 수 있다.

※사용자 인터페이스를 높이기 위한 placeholder 속성 : 각 필드에 대한 입력 형식 힌트
ex) 전화번호 : 010-0000-0000 , 00-000-0000, 카드번호 : 0000-0000-0000 등등 사용자가 입력할때 참고하게끔 하는 힌트. 
※사용자 인터페이스를 높이기 위한 autofocus
위에서 말한 커서 깜박임.
※휴대폰번호 입력을 위한 패턴 유효성 체크
ex)
<input type="tel" id="email" pattern="\d{3}-\d{3,4}-\d{4}"
title="휴대폰 번호는 3자리 숫자-3자리에서 4자리 숫자-4 자리 숫자로 입력하셔야 합니다." />

(19) Readonly hidden disabled
<input type="hidden" name="xx" value="hidebData" />
        diable data: <input type="text" disabled="disabled" 
                            name="disableData" value="disable"/>   = 텍스트칸에 해당 값이 보이지만 사용자가 건들지 못하게 만듬.

readOnly data : <input type="text" readonly="readonly"
                               name="readData" value="readOnly" /> = 텍스트칸에 해당 값이 보이고, 반응은 있지만 사용자가 건들지 못함.


2.공간분할 태그(레이아웃태그) – div(블록형식의 태그), span(라인형식의 태그)
(1) div : block 형식으로 공간을 분할 . 하나의 블록형식의 태그므로 개행포함 ex)p, ul안의 li
(2) span : inline 형식으로 공간을 분할

3.div를 이용한 레이아웃
<div id="header"></div>
<div id="nav"></div> 
CSS 를 입히고 싶으면 #header, #nav ~~

4.시멘틱을 이용한 레이아웃  (div로 해도 되고 시멘틱을 이용해도 된다.)
- 일반적으로 HTML5 태그의 가장 큰 변화를 시멘틱 태그라고 한다. 이 때문에 일반적으로 HTML5 웹 페이지를 시멘틱 웹 페이지라고 말한다. 
	시멘틱(semantic)은 ‘의미론적인’ 뜻.
- 웹 페이지는 글자로 입력한다. 스타일시트를 적용하고 사용자가 눈으로 볼 때, “이것은 제목이고, 이것은 본문이다”라는 식으로 구부할 수 있다.
- 기계적인 검색 엔진은 어떠한 태그가 어떠한 기능을 하는지 분별할 수 없고 웹 페이지에서 데이터를 효율적으로 추출할 수 없다. 
  이를 해결하고자 특정 태그에 의미를 부여해서 웹 페이지를 만드는 시도가 시작되었다. 
   그리고 이를 시멘틱 웹이라고 표현한다. 시멘틱 웹의 장점은 검색엔진이 보다 효율적으로 검색을 할 수 있고 유지보수시 효율적이다
- HTML5 시멘틱 구조 태그
header : 해더
nav : 내비게이션
aside : 사이드에 위치하는 공간
section : 여러 중심 내용을 감싸는 공간
article : 글자가 많이 들어가는 부분
footer : 꼬리말

