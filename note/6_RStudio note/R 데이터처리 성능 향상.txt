데이터처리 성능 향상.

1.plyr 패키지.
plyr 패키지는 R의 split-apply-combine 패턴을 구현하는 깨끗하고 일관된 도구 세트이다.
이 패키지는 데이터의 분할, 함수적용, 재조합 등에 사용하는 함수를 포함한다.
plyr 패키지의 함수는 apply( ), lapply( ),sapply( ) 함수를 대체할 수 있다.
plyr 패키지의 함수는 분할된 데이터구조의 종류와 반환하는 데이터 구조의 종류에 따라 이름이 지정이 된다.
함수의 이름은 입력 데이터의 타입에 따라 x, 출력 데이터의 타입에 따라 y 가 달라진다.
xyply(.data, ... )

- x : 입력 데이터의 타입을 지정한다.(a : array,  l : list, d : data.frame,  m : multiple inputs, r : repeat multiple times )
- y : 출력 데이터의 타입을 지정한다.(a : array,  l : list, d : data.frame,  m : multiple inputs, r : repeat multiple times, _ : nothing)
=> xyplyr(.data, group ...)  #ex. adply= array로 받아서 df로, ddply= df로 받아서 df로. ~~~

1-1. ddply, abply 
ddply( ) 함수의 구문.
ddply(.data, .variables, .fun=NULL, ... , .progress="none", .inform=FALSE, .drop=TRUE, .parallel=FALSE, .paropts=NULL)
#ddply == summaryBy(Sepal.Length+Sepal.Width~Species, iris, FUN=mean) 비슷.
ex>
ddply(.data=iris, .(Species), function(group){
  data.frame(SL.mean = mean(group$Sepal.Length),
             SWmean = mean(group$Sepal.Width))
})

adply( ) 함수의 구문.
abply(.data, .margins, .fun=NULL, ... , .expand=TRUE, .progress="none", .inform=FALSE, .parallel=FALSE, .paropts=NULL, .id=NA)
#adply에레이,리스트 형태로 받아서. == apply(iris[1:4], 2, sum), sapply() ... 비슷.
ex>
adply(.data=iris[,1:4], margins=2, function(col){sum(col)})

2. reshape2 패키지.
칼럼 이름과 값을 variable, value 칼럼에 저장된 형태로 변환하는 함수 제공
install.packages("reshape2")

5, 6번째 칼럼을 고정하고, 나머지 칼럼을 variable과 value로 변환
– library(reshape2)
– data <- melt(airquality, id=c(5, 6), na.rm=TRUE)

행과 열의 형태로 데이터 표시 (수식=행 ~ 열), data.frame 반환
– dcast(data, MOnth ~ variable, sum)
– dcast(data, MOnth + Day ~ variable, NULL)

행과 열의 형태로 데이터 표시 (수식=행 ~ 열), matrix 반환
– acast(data, MOnth ~ variable, sum)
– acast(data, MOnth + Day ~ variable, sum)
– acast(data, Day ~ variable ~ MOnth, sum)

2-1. melt( )
melt( ) 함수는 열 이름과 값을 variable, value 열에 저장된 형태로 변환하는 함수를 제공합니다.
이는 열 단위 데이터 구조를 행단위 데이터 구조로 바꿉니다.

melt(data, ..., na.rm=FALSE, value.name="value")
- data : melt 할 데이터셋.
- ... : 함수에 전달할 인수.
- na.rm : NA값을 데이터셋에서 삭제할지 여부를 지정. FALSE(기본값)이면, NA값도 재구조화에 사용한다.
- value.name : 값을 저장하기 위해 사용할 변수의 이름.

2-2. cast( )
cast( ) 함수는 molten(melt의 형용사) 데이터프레임을 배열 또는 데이터프레임으로 캐스팅한다.
cast( )함수는 reshape 패키지의 함수 이름이다. reshape2 패키지에서는 dcast( )와 acast( )함수로 제공한다.
dcast( ) 는 캐스팅 한 결과가 데이터프레임(data.frame)타입이고, 
acast( )는 캐스팅 한 결과의 타입이 벡터(vector)/행렬(matrix)/배열(array)이다.
dcast(data, formula, fun.aggredate=NULL, ..., margins=NULL, subset=NULL, fill=NULL, drop=TRUE, value.var=guess_value(data))
ex>
airquality.dc <- dcast(airquality.melt, Month+Day~variable) #Month,Day 가 변수로.

acast(data, formula, fun.aggredate=NULL, ..., margins=NULL, subset=NULL, fill=NULL, drop=TRUE, value.var=guess_value(data))
ex>
airquality.ac <- acast(airquality.melt, Month+Day~variable) #Month와 Day 가 행이름으로 잡힌다.


3. 데이터테이블.
- 데이터 테이블(data.table)은 데이터 프레임(data.frame)에서 상속
- 빠른 개발을 위해 짧고 유연한 구문을 사용하여 파일 읽기와 쓰기, 집계, 업데이트, 동등 비교,
  범위 및 내부 조인 등을 빠르고 메모리 효율적으로 제공
- 데이터 테이블은 R의 기본 타입인 데이터 프레임을 대신하여 사용할 수 있는 더 빠르고 편리한 데이터 타입

데이터테이블을 이용한 분석에서 데이터분할, 부분집합, 그룹, 수정, 조인 등과 같은 데이터 조작 작업은 모두 데이터프레임의 기능을 상속 받는다.
데이터테이블을 이용하면 다음장점을 가질 수 있다.
- 간결함과 일관성 : 최종목표를 달성하기 위해 수행하고자하는 작업 세트와 상관없이 간결하고 일관성 있는 구문을 제공한다.
- 유동적 : 분석을 수행하기 전에 사용할 수 있는 함수 집합에서 특정 함수로 각 작업을 매핑 해야하는 인지적 부담없이 데이터를 유동적으로 분석을 수행.
- 자동화 : 각 작업에 필요한 데이터를 정확하게 파악함으로써 매우 빠르고 효율적으로 내부적으로 작업을 자동으로 최적화 한다.

3-1. data.table
데이터테이블은 향상된 버전의 데이터프레임을 제공하는 R 패키지 이다. 앞의 데이터섹션에서 fread( )를 사용하여 데이터테이블을 이미 만들었다.
data.table( ) 함수를 사용하여 생성 할 수도 있다.
data.table(... , keep.rownames=FALSE, check.names=FALSE, key=NULL, stringsAsFactors=FALSE)

3-2. 데이터 부분집합.
데이터프레임과는 달리 데이터테이블의 [...] 에서 행을 부분 집합하고 열을 선택하는것보다 훨씬 많은 작업을 수행 할 수 있다.
이를 이해하기 위해 아래와 같이 일반적인 형식의 데이터테이블 구문을 살펴보아야 한다.

dt[ i, j, by , keyby, WITH=TRUE, nomatch = getOption("datatable.nomatch"), mult="all", .SDcols ]

- R에서 =>  i = where ,  j = select || update,  by = group by .
- 위 구문에서 dt 를 사용하고,[ i를 사용하여 부분 집합을 만들고 j 를 계산하며, by 를 이용하여 그룹화 한다] 라고 보면 된다.
















