SUBQUERY 

단일행 서브쿼리 = 서브쿼리의 결과가 단일 행
		단일 행 연산자 : =, >, >=, <, <=, <>

다중행 서브쿼리 = 서브쿼리의 결과가 2행 이상의 행
		복수 행 연산자 : IN, NOT IN, ANY, SOME, ALL, EXISTS

1. 서브 쿼리의 개념
 SCOTT의 부서명을 알아내기 위한 서브 쿼리문부터 살펴보자
­ SELECT DNAME FROM DEPT WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME=’SCOTT’); -- ( )부분 : 서브쿼리

(1) 서브 쿼리는 하나의 SQL 문장의 절 안에 포함된 또 하나의 SELECT 문장입. 
(2) 그렇기에 서브 쿼리를 포함하고 있는 쿼리문을 메인 쿼리, 포함된 또 하나의 쿼리를 서브 쿼리.
(3) 서브 쿼리는 비교 연산자의 오른쪽에 기술하고 반드시 괄호로 둘러 쌓아야 한다. 
(4) 서브 쿼리는 메인 쿼리가 실행되기 이전에 한번만 실행이 된다.

(5) 셀렉절에도 서브쿼리가 들어갈수있는데 (이 안에 넣어야한다.) 웨얼절에도 프럼절에도 들어갈수있음.
SELECT EMPNO , ENAME, SAL,DEPTNO,(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO) FROM EMP E 
    WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);

2. 단일행 서브쿼리
(1) 단일 행(Single Row) 서브 쿼리는 수행 결과가 오직 하나의 로우(행, row)만을 반환하는 서브 쿼리를 갖는 것을 말한다. 
(2) 단일 행 서브 쿼리문에서는 이렇게 오직 하나의 로우(행, row)로 반환되는 서브 쿼리의 결과는 메인 쿼리에 보내게 되는데,
	 메인 쿼리의 WHERE 절에서는 단일 행 비교 연산자인 =, >, >=, <, <=, <>를 사용해야 한다.


3. 다중행 서브쿼리
(1) 다중 행 서브 쿼리는 서브쿼리에서 반환되는 결과가 하나 이상의 행일 때 사용하는 서브 쿼리다.
     다중 행 서브 쿼리는 반드시 다중 행 연산자(Multiple Row Operator)와 함께 사용해야 한다.

   (2) 다중행 연산자의 종류
	IN : 메인 쿼리의 비교 조건(‘=’ 연산자로 비교할 경우)이 서브 쿼리의 결과 중에서 하나라도 일치하면 참
	ANY =  SOME : 메인 쿼리의 비교 조건이 서브 쿼리의 검색 결과와 하나 이상이 일치하면 참
	ALL : 메인 쿼리의 비교 조건이 서브 쿼리의 검색 결과와 모든 값이 일치하면 참
	EXISTS : 메인 쿼리의 비교 조건이 서브 쿼리의 결과 중에서 만족하는 값이 하나라도 존재하면 참
