SQL 문에서의 DML Select .
 SQL 에서는 대소문자를 구별하지않기에, 일반적으로 작성할때는 대문자로 작성한다. 명령어의 끝은 ; 이며 주석처리는 -- 이다.
 자바와 헷갈릴수도 있지만 주의하자.

1. SQL 문의 기본 구성.
SELECT : 원하는 컬럼 선택
    *	: 테이블의 모든 column 출력
  alias	: 해당 column에 대한 다른 이름 부여 
DISTINCT: 중복 행 제거 옵션
FROM  : 원하는 데이터가 저장된 테이블 명을 기술
WHERE : 조회되는 행을 제한하기 위한 조건 추가
condition : column, 표현식, 상수 및 비교연산자
ORDER BY:정렬을 위한 옵션 (ASC :오름차순이며 default, DECS 내림차순)


SELECT * FROM TAB; --scott이 소유하고 있는 table을 전부 보여줌
­ scott(사용자)가 소유한 테이블

SELECT * FROM dept; -- dept테이블 데이터 전체 보기
DESC dept;          -- dept테이블의 구조보기
: 아래처럼 조건식이 있어서 조건식에 맞게 값을 불러오거나 넣을수있다.
­ not null : null값이 있으면 안 된다.
­ number(4) : 부서코드는 정수 4자리
­ number(7,2) ; 총자리수 7자리 중 소수점 이하는 2자리

 SELECT * FROM emp;  -- EMP 테이블의 전체보기

 SELECT EMPNO, ENAME , SAL, JOB ,  FROM EMP; -- EMP 테이블에서 EMPNO와 ENAME,SAL , JOB을 보여준다.

 SELECT EMPNO AS "사번", ENAME AS "직원 이름", JOB AS "직업" FROM EMP; -- 별명(Alias) 사용 AS를 넣어도 가능하고, " " 따옴표 안에 , AS와 " " 생략 가능.

2. WHERE 조건과 비교연산자 : 같다(=), 크거나같다(>=) 작거나같다(<=) 다르다(<> ^= !=) , 작다(<) , 크다 (>)
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL = 3000;
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL <> 3000;
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL != 3000;
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL ^= 3000;
	­ <>, !=, ^= 모두 다르다를 의미
--비교연산은 숫자 , 문자, DATE형 (날짜) 모두 가능.
SELECT * FROM EMP WHERE ENAME < 'F';  --이름이 F보다 작은 사람 뿌려라.  ABCDE 로 시작하는 사람 뿌려줌.
-- 라 보다 작은 사람 뿌려라 = 가나다 이름만 나옴.
SELECT * FROM EMP WHERE HIREDATE < '81/01/01';  --81년도 보다 작은사람 뿌려라
SELECT * FROM EMP WHERE HIREDATE >= '82/01/01' AND HIREDATE <= '82/12/31';  --82년도 보다 크고  82년 12.31 보다 작은 사람들.
--날짜 표시법 셋팅
ALTER SESSION SET NLS_DATE_FORMAT='RR/MM/DD';  --날짜 타입 바꿈.


SELECT * FROM EMP WHERE DEPTNO=10;
SELECT EMPNO, ENAME, SAL FORM EMP WHERE ENAME=’FORD’;
­ SQL에서 문자열이나 날짜는 데이터값이기 때문에 반드시 작은따옴표안에 표시.
­ SQL문에 사용되는 키워드인 SELECT나 FORM이나 WHERE 등은 대소문자를 구 별하지 않지만 테이블 내에 저장된 데이터 값은 대소문자를 구분하기에 ‘FORD’ 와 ‘ford’는 다르다. 



3. 논리연산자
SELECT * FROM EMP WHERE DEPTNO=10 AND JOB=’MANAGER’;
SELECT * FROM WHERE DEPTNO=10 OR JOB=’MANAGER’;
SELECT * FROM EMP WHERE NOT DEPTNO = 10; 
SELECT * FROM EMP WHERE SAL>=2000 AND SAL<=3000;
	­ 2000이상3000이하인 사원정보 출력

4. 산술표현식

    SELECT ENAME, SAL , SAL+300 UPGRADESAL FROM EMP;
-- ENAME 과 SAL 의 카테고리가 나오고 SAL+300 을 연산해서 "UPGRADESAL" 라고 나온다.

--모든사원의 사원명, 월급(SAL),연봉(SAL*12+COMM(상여금))
SELECT ENAME, SAL, COMM, SAL*12+NVL(COMM,0) FROM EMP; --널값 대신 대치값 지정한걸 넣어라
--산술연산의 결과는 NULL을 포함하면 결과는 NULL -> NVL(NULL 일수도 있는 필드명, 대치값)  둘의 타입이 같아야함.

DESC EMP;  -- COMM 유형이 NUMBER 라서 넘버만 들어간다.
--모든사원의 사원명, 월급(SAL), COMM ,연봉(SAL*12+COMM(상여금)) COMM이 NULL이면 0으로 하자.

SELECT ENAME, SAL, NVL(COMM, '0$'), SAL*12+NVL(COMM, 0) FROM EMP;  --'0$' 넘버 타입이 아니라 안댐. 하려면 형변환 해야함.
--모든 사원의 사원명(ENAME), 상사의 사번(MGR) 상사가 없으면 CEO 출력불가  =0으로 출력해보자


5.연결 연산자.
SELECT ENAME, NVL(MGR, 0) FROM EMP;
--연결 연산자.( || ) = 열이나 문자를 연결함.
SELECT ENAME || ' 은 ' || JOB || ' 이다'  FROM EMP;
 --"SMITH IS CLERA" 로 출력되고 TITLE EMPLOYEES 라고 모든 직원 출력
 SELECT ENAME || ' IS ' || JOB EMPLOYEES FROM EMP;

6. 중복제거 = DISTINCT  를 사용하여 나타나는 결과는 기본적으로 오름차순 정렬

 SELECT DISTINCT JOB FROM EMP;   --셀렉과 잡 사이에.
 SELECT DISTINCT MGR FROM EMP;


7번. SQL 연산자. 	DISTINCT : 중복제거 

--SAL 이 1500이상이고 3000이하면 사번, 이름, 급여 출력 을 SQL 연산자로 써보자
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL>=1500 AND SAL <=3000;

--필드명 BETWEEN A AND B (A~B까지 , A와 B 포함.) 문자와 데이트형도 가능.
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL BETWEEN 1500 AND 3000;

--82년도에 입사한 직원의 모든 필드를 출력.
SELECT EMPNO, ENAME , JOB, HIREDATE FROM EMP WHERE HIREDATE>='81/01/01' AND HIREDATE<= '82/12/31';
SELECT * FROM EMP WHERE HIREDATE BETWEEN '82/01/01' AND '82/12/31'; --앞에 데이터가 작아야함.

--이름이 A~C로 시작하는 사람.
SELECT * FROM EMP WHERE ENAME BETWEEN 'A' AND 'D';  --컨 + D 를 하면 싹다 지움.  자바에서는 한줄지우기.
                                                    -- ENAME != 'D' D를 빼고~
--부서번호 (DEPTNO) 가 10,20 인 사원의 모든 필드
SELECT * FROM EMP WHERE DEPTNO=10 OR DEPTNO =20;
SELECT * FROM EMP WHERE DEPTNO IN (10,20);  --IN 연산자
SELECT * FROM EMP WHERE DEPTNO NOT IN (10,20); --부서번호가 10과 20이 아닌 사람들.

-- EMPNO 가 7902, 7788 7566 인 사원의 모든 필드.
SELECT *FROM EMP WHERE EMPNO IN (7902, 7788, 7566);

--이름이 M 으로 시작하는 사원의 모든 필드.  M_(언더바는 한글자수.) ,  M% 0글자 이상. 
SELECT * FROM EMP WHERE ENAME LIKE 'M%'; --0글자 이상.  라이크는 문자에 많이 쓰인다.

-- 이름에 N이 들어가는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE '%N%';  -- 앞과 중간 뒤에 들어가는 애들을 찾아준다.

--이름이 S 로 끝나는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE '%S';

--이름에 %가 들어가는 사원의 모든 필드
INSERT INTO EMP VALUES (9999,'A%',NULL,NULL,NULL,9000,9000,40);--해당 테이블의 모든 값을 넣어야한다.

--기존의 테이블에 없는 데이터를 넣을라면 INSERT INTO 테이블 VALUES (테이블 정보칸 갯수에 맞게.);
SELECT * FROM EMP;
SELECT * FROM EMP WHERE ENAME LIKE '%\%%' ESCAPE '\';  --% 가 연속으로 있는거는 이렇게.
ROLLBACK; --(DML 데이터 조작어를 취소) 
SELECT * FROM EMP;  --A% 추가된것이 취소댐.

--SAL 이 5로 끝나는 사원의 모든 필드.   VACHAR 문자.
SELECT * FROM EMP WHERE SAL LIKE '%5';  --문자도 데이트형도 되긴함.

--입사년도가 82년인 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE >='82/01/01' AND HIREDATE <= '82/12/31' ;
SELECT * FROM EMP WHERE HIREDATE BETWEEN '82/01/01' AND '82/12/31' ;
SELECT * FROM EMP WHERE HIREDATE LIKE '82/__/__' ;
SELECT * FROM EMP WHERE HIREDATE LIKE '82/%';

SELECT * FROM EMP WHERE HIREDATE BETWEEN TO_DATE('1982/01/01','YYYY/MM/DD') AND TO_DATE('1982/12/31', 'YYYY/MM/DD');
--타임존 이 다르면 이렇게 해서 바꿔줘야 한다.

--1월에 입사한 사원의 모든 필드 출력  '%/01/%'
SELECT * FROM EMP WHERE HIREDATE LIKE '__/01/__';

--상여금이 없는 사원의 모든 필드 출력.
SELECT COMM FROM EMP; --COMM 이 어떻게 있는지 본다.
SELECT * FROM EMP WHERE COMM=0 OR COMM IS NULL;  --널값을 뽑고싶으면 IS NULL 로 해야함.

--상여금이 있는 사원의 모든 필드 출력.
SELECT * FROM EMP WHERE COMM IS NOT NULL AND COMM!=0;   --널도 아니고 0도 아닌 값들.

8.정렬 (오름차순, 내림차순)
SELECT ENAME , SAL FROM EMP ORDER BY SAL; --오름차순 정렬   ORDER BY SAL(ASC); 가로안은 생략 가능함.
SELECT ENAME , SAL FROM EMP ORDER BY SAL DESC; -- 내림차순 정렬

--SAL 이 높은 순으로 출력(단, 같은 SAL 일 경우 입사일 최신 순으로 정렬.)
SELECT * FROM EMP ORDER BY SAL DESC, HIREDATE ; --SCOTT 과 FORD 의 입사일 차이에 따라 오름과 내림차순.
SELECT * FROM EMP ORDER BY SAL DESC, HIREDATE DESC; --위와의 차이는 입사일기준으로 빠른날짜의 오름내림차순.
SELECT * FROM EMP ORDER BY SAL DESC, HIREDATE DESC, ENAME;  -- 이름순서대로 가나다라 ABCD 
SELECT * FROM EMP ORDER BY ENAME;

--이름,연봉(SAL*12+COMM)을 출력 (연봉이 높은 순 으로) --ORDER BY 연봉(별명) DESC; 이렇게 가능.
SELECT ENAME, SAL*12+NVL(COMM,0) 연봉 FROM EMP ORDER BY SAL*12+NVL(COMM,0) DESC;

--이름,연봉이 2000이상인 직원의 이름,연봉을 출력 (연봉이 높은순) --WHERE 절에는 계산식을 넣어야함. 별명 넣는거 불가.
SELECT ENAME, SAL*12+NVL(COMM,0) 연봉 FROM EMP WHERE SAL*12+NVL(COMM,0) >= 2000 ORDER BY 연봉 DESC;
