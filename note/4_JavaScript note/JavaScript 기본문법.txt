2.1 기본 용어

이처럼 Java 와 JavaScript 의 차이점이 거의 없는듯 하나 나중에 나올 객체쪽에서부터 많이 달라진다.

① 표현식과 문장 ; 하나 이상의 표현식이 모여 문장. 한 문장 단위로 세미콜론을 찍는다.

② 키워드: 자바스크립트가 처음 만들어질 때 정해진 특별한 의미가 있는 단어.
    break, else, instanceof, true, case, false, new try, catch, finally, null, typeof, continue, for, switch, void, delete, if, this, while, do, in, throw, with

③ 식별자 ; 이름을 붙일 때 사용하는 단어 ex.변수명, 함수명, 속성, 메소드
    키워드를 사용하거나 숫자로 시작하면 안 됨. 특수문자는 _과 $만 허용. 공백문자를 포함할 수 없다.
    한글이나 한자 일본어 같은 언어를 포함할 수 있으나 알파벳을 사용하는 것이 관례. 의미있는 단어를 사용하고 여러 단어로 이루어진 식별자는 각 단어의 첫글자를 대문자로
    생성자함수의 이름은 항상 대문자로 시작. 그외 변수는 항상 소문자로 시작

④ 주석 : /* 주석 */ 또는 // 주석

2.2 출력
 alert(‘Hello, JavaScript’);.
 alert(“Hello, JavaScript”);..

알림창으로 출력하는것과 브라우저 안에서 출력하는 방법도 있다.
    <script> //(브라우저)window 내장객체
        //브라우저가 뜰때 실행되는 .  
        window.onload = function () {
            document.body.innerHTML += '<h2>This is JavaScript</h2>'; //html 의 바디안에 헬로밑에 <h2></h2> 내용이 들어간다.
        };
    </script>
</head>
<body>
    <h2>Hello</h2>
</body>

2.3 문자열 자료형
  큰따옴표나 작은 따옴표를 이용할 수 있으며, 항상 일관되게 따옴표를 사용하는 것을 추천 
  그러나 문자열 안에 따옴표를 사용해야 한다면 예외적으로 두 가지를 모두 사용

ex) alert(‘This is “Spring”’); 또는 alert(“This is ‘spring’”);
	이스케이프문자 : \n   \n   \’   \”   \\   
<script>
        // 자료형 : string,number,boolean,object(array),function, undefined
        document.write('This is JavaScript<br>');
        document.write("This is JavaScript<br>" + '한줄에 더블과 싱글을 다 쓸 수도');
        document.write("<br>This is \"JavaScript\"<br>");
        alert('This is \nJa\bvaScript');
</script>


3.1 숫자 자료형
  정수와 유리수의 구분 없이 사용. 
  우선순위 고려. 
  %(나머지 연산자)와 사칙연산 가능

정수형은 진법에 따라 10진수(10), 8진수(012), 16진수(0xa)로 표현가능.
실수형은 일반 소수형실수(3.141592)와 지수형 실수(0.3141592E+9)로 표현 가능



        alert('10진수 : ' + 10); // 1 0 = 10의1승 *1 = 10의0승*2
        alert('8진수 : ' + 012); // 1 2 = 8의1승*1 + 8의0승*2
        alert('16진수 : ' + 0x12); //1 2 = 16의1승*1 + 16의0승*2
        // 0 1 2 3 4 5 6 7 8 9 10   11   12 13 14 15 16 ..
        // 0 1 2 3 4 5 6 7 8 9 a(A) b(B) c   d  e  f 10 16진수
        //실수를 표현하는 방법 = 소수형 + 지수형
        alert('소수형 : ' + 31489200.00);
        alert('지수형 : ' + 0.314892E+8); //+는 붙혀도 안붙혀도 상관무.

3.2 Boolean  자료형
  비교연산자 (!=;다르다) 등을 이용하여 불 자료형을 만들 수 있다.
  논리연산자 (! 부정연산자, && 논리곱연산자, || 논리합연산자)
  잘못된 연산자의 사용: alert(30>20>10) 논리연산자는 삼항연산자가 아니다.
  바른 예 : alert( 30>20 && 20>10);


4. 변수
변수의 생성과 사용

<script>
        //타입이 고정 되지 않는다.

        var varString; //변수 선언만. 근데 이상태에서도 타입을 가지고있다.
        document.write('1.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        // 1.varString의 타입 : undefined 변수가 없는 타입.
        varString = '홍길동'
        document.write('2.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        // 2.varString 타입 : string - 값 : 홍길동 
        varString = 10.5;
        document.write('3.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        varString = true;
        document.write('4.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        varString = function () {  
            alert('함수속');
        };  // ; 놓치지말것.
        document.write('5.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        // varString(); //alert 함수속을 보여준다.
        varString = { name: '홍길동', age: 28, addr: '서울시 마포구' }; //객체.
        document.write('6.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
        //object 로 만 나오고 값이 안보이는데 나중에 toString 처럼 값을 보이게끔 하는방법도있다.
        varString = [10, '홍', function () { }, true, { name: '홍' }, [1, 2, 3]]; //array 안에 array 가능 또한 모든 변수들이 들어갈수있다.
        document.write('7.varString 타입 : ' + typeof (varString) + ' - 값 : ' + varString + '</br>');
    </script>


5.	복합 대입 연산자(+= -= *= /= %=)

<script>
        document.write('<h2>금요일</h2>');
        window.onload = function () {
            var list = '';
            list += '<ul>'; //복합개행연산자.
            list += ' <li>HTML</li>';
            list += ' <li>JavaScrip</li>';
            list += ' <li>jQuery-aJax</li>';
            list += '</ul>';
            document.body.innerHTML += list;

        };
    </script>          증감연산자(++ --) 도 있다.

6. 자료형 검사 typeof.

document.write('str이 "coffee"일 때 ' + typeof (str)+'<br>');
    str = 5;

7.Undefined 
Undefined Type

자바스크립트의 Undefined 타입은 값이 1개밖에 없다. 바로 'Undefined' 단 하나이다.
이 Undefined 라는 값은 변수가 정의되지 않았다는것을 의미하는데,
가장 쉽게 이 값을 얻는 방법은 var 키워드를 이용해 변수를 선언하고 초기화 하지(값이 어싸인되지 않았을 때) 않는 것 이다.


8. 입력
 자바스크립트에 내장된 대화상자를 이용한 인터페이스
① alert 함수 : 경고 메시지를 전달하기 위한 대화상자를 표시
  alert(단순히 전달사항을 출력할 때 사용하는 함수);

② confirm 함수 : 사용자의 확인을 받기 위한 대화상자를 표시
    반환값 = confirm(출력할 메시지); //반환값이 true면 확인단추가 false면 취소단추가 선택된 것임.
<script>
        answer = confirm("[확인] [취소] 중 선택 : 수강신청을 하시겠습니까?");
        if (answer == true)
            alert("등록되었습니다");
        else
            alert("취소되었습니다. 다시 신청해 주세요");
    </script>
③ prompt 함수 : 사용자로 내용을 입력받을 수 있는 대화상자를 표시.
   원하는 데이터를 키보드에서 입력받고 싶을 때 prompt함수를 사용.
   반환값 = prompt(메시지, 초기값);
<script>
        var score = prompt('점수를 입력해 주세요', '0~100점 사이');
        if (score == null) {
            alert('점수를 입력하세요');
        } else {
            sc = Number(score);
            result = sc > 70 ? '잘했다' : '못했다'; //삼항연산자.
        }
        document.write(result);
    </script>

9. 숫자와 문자열 자료형 변환
문자열 + 숫자 => 문자열이 우선
Alert(52+’273’);

- Number(ob) ; 다른 자료형을 숫자로 바꿀 때. 일반문자열을 숫자로 표시할 수 없지만 강제로 숫자자료형으로 바꿨을 시 NaN으로 출력.
- parseInt(string, [진수])와 parseFloat(string) ; 문자열을 정수와 실수로 변경. 문자열 타입의 숫자만 가능
- eval(string) ; 문자열을 수식으로 바꾸어 준다.

<script> //eval ('자바스크립트 명령어') = eval 매개변수의 안의 명령을 수행함. 
        var i = eval('10+20');
        alert(i);
        var f = eval("alert ('테스트')"); //테스트 경고창을 보여주고 f 값으로 들어간다.
        alert(f);  //리턴을 안함.  undefined 이 나옴, 
    </script>


- String(ob); 다른 자료형을 문자열로 바꿀 때
- isNaN(숫자); 주어진 데이터가 숫자면 false리턴, 숫자가 아니면 true리턴    // 자바스크립트에서 나타낼수 없는 숫자를 의미 : NaN

i = Number(''); //0 으로 들어감.
        document.write(i + '<br>');

        i = Number('a'); // NaN .
        document.write(i + '<br>');

10. 일치연산자. ( a == null )

11  불자료형 변환 - Boolean(); Boolean 자료형으로 변환. 다음의 경우는 false로 변환
Boolean(0), Boolean(NaN), Boolean(''), Boolean(null), Boolean(undefined), Boolean(false)

//false 로 인식 되는 값들 = '', 0, null , NaN , undefined 
        document.write(Boolean(''));
        document.write(String(10)); // '10'
