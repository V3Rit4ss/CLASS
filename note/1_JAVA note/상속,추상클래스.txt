[ 상 속 ]
상속 : 프로그래밍에서도 어떤 클래스가 다른 클래스로부터 데이터(속성)와 메소드(기능)를 상속받을 수 있다. 
이럴 경우 상속받은 객체는 상속해 준 객체의 데이터 및 메소드를 이용할 수 있고 또는 변경할 수도 있으며 상속을 통해서 많은 개발시간을 단축시킬 수 있다. 
또 기존에 만들어진 클래스는 검증이 된 클래스이므로, 시행착오도 줄일 수 있다.
자식 클래스 모두 부모 클래스 타입이 될 수 는 있지만 그 반대는 안됀다.
ex) 인간 이 -> 포유류( O ) .  포유류 가 -> 인간 ( X ).

* 상속이란 기존의 클래스를 재사용해서 새로운 클래스를 작성하는 것
* 두 클래스를 부모와 자식(조상과 자손)으로 관계를 맺어줄 수 있다.
* 자손은 조상의 멤버를 상속받으나, private멤버는 직접 제어할 없다.
   자손의 멤버 개수는 조상보다 작을 수 없다(같거나 많다)
* 자바에서는 다중 상속이 지원되지 않는다.



[ 추상 클래스 ]

추상클래스 :  부모클래스를 만들고 상속받은 자식클래스에 메소드를 강제로 쓰게 하고 그 메소드를 재정의 해서 메소드를 기입해놓은 것을 추상클래스라 한다.
부모클래스의 메소드를 재정의 하는것을 오버라이드,  
같은 이름의 메소드를 여러 개 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술을 오버 로딩이라 한다.

오버 라이드 (재정의) : 부모 클래스의 메소드를 써야하긴 하지만 자식 클래스에서는 살짝 바꾸고 싶을때 재정의 할 수 있다. BUT 오버라이드 를 하면  부모클래스의 메소드를 사용할수가 없다.

오버로딩 (중복 정의) : 인자의 타입이 다르면 같은 이름의 메소드라도 다른 기능으로 중복 정의가 가능하다.

final 이라는 접근 제한자를 이용한 메소드.

⑴ 클래스 앞에 붙일 경우 : 상속 금지
	public final class Test {

	}
⑵ 멤버 메소드 앞에 붙일 경우 : 오버라이딩 금지
	public final void print(){
	
	}
⑶ 멤버변수 앞에 붙일 경우 : 상수화된다(변경금지).
	public final int PORT_NUMBER = 80;
