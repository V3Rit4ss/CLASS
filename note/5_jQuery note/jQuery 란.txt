1. jQuery란, 
자바 스크립트 라이브러리 중 가장 인기 있는 라이브러리. 
이벤트 대응, 애니메이션과 메뉴효과 등에서 가장 단순하고 쉽게 페이지 제작을 할 수 있도록 도와준다

기능 = 문서 객체 모델과 관련된 처리를 쉽게 구현
- 일관된 이벤트 연결을 쉽게 구현
- 시각적 효과를 쉽게 구현
- aJax 애플리케이션을 쉽게 개발

* http://www.w3schools.com : jQuery강좌와 풍부한 예제
* http://www.jquery.com : API documentation, 버전정보, 예제들, UI제공
* jeasyui.com : jQuery Easy UI 직관적으로 jQuery를 이용해서 쉽게 사이트를 구현할 수 있는 라이브러리 제공
* jQuery는 자바스크립스 사용을 더욱 쉽게 하는 게 목적
* 사전 지식으로 HTML, CSS, JavaScript를 알아야 한다.
* jQuery는 적게 쓰고 큰 효과를 내도록 하는 경량화된 자바스크립트 라이브러리.
* 자바 스크립트를 더욱 쉽게 가볍게 만들어준다
* Ajax나 DOM등을 다룰 때 복잡한 일들을 jQuery 사용으로 단순화된다
* 다양한 모든 브라우저를 가만해서 jQuery 제공

2. 사용법
 jQuery.com(http://jquery.com/download)에서 다운로드한다
 jQuery는 두 가지 버전을 제공하고 있다.
- production 버전 - 우리가 웹사이트에 적용해서 쓰는 버전(최소화 되어져 있고 압축되어졌음)
- development 버전 - 어떻게 구성되어졌는지 보려면 이 버전을...(압축되어 있지 않음)
- 1.X 이전 브라우저 지원.(IE 6버전까지도 호환)
- 3.X  표준화 되어 있지 않은 IE 6,7,8은 지원 안 됨
  구글과 같은 CDN(Content Delivery Network) 으로부터 jQuery를 포함시키는 방법이 있다.(CDN방식)
- http://code.jquery.com/jquery

<script	 src="http://code.jquery.com/jquery-1.12.4.js"></script>
<script	 src="http://code.jquery.com/jquery-3.4.1.min.js"></script>

다운 로드 방식이 아닌 CDN 방식의 경우, 브라우저로 여러 사이트를 돌아다니다 보면 사용자가 CDN 정보가 cash되어 있어 빨리 로드된다.



3. jQuery 기본 문법
$('선택자').함수();

jQuery 의 여러 함수들.

1) hide()
2) show()
3) toggle()
4) html()  해당 선택자 안에 html코드 삽입
5) text()   해당 선택자 안에 text 삽입
6) val('변형될 value') ; value값 변형
7) css('속성', '속성값')
8) each ; 배열 처리함수 
9) addClass ; 클래스 추가
10) removeClass ; 클래스 삭제
11) append
12) prepend
13) attr 
14) 이벤트 관련 함수들
     click(콜백함수), focus(콜백함수), etc...
     off(), trigger()..
15) aJax관련 함수들 : $.get(), $.post(), $.ajax()

${‘selector’).action()의 예

$(this).hide();
$("p").hide();
$(".test").hide(); - 클래스는 여러개
$("#test").hide(); - ID는 한개만

Document Ready Event
$(document).ready(function(){
	// 웹문서(document)가 준비(onload)될 때(jQuery의 ready이벤트는 onload이벤트이다)
	// $ : jQuery를 의미한다 $(“선택자”).css(“속성”,”속성값”);
	// jQuery 메소드가 여기 온다.
});
이미지가 로드된 후에 사이즈를 변경한다던지, element가 만들어진 이후에 hide되는 등의 에러를 막기 위해 ready이벤트에 써준다
$(function(){
	// 위와 동일한 효과
	// jQuery 메소드가 여기 온다.
});

ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <!--  <script src="js/jquery-3.5.1.min.js"></script>  -->
    <script>

        //파일을 직접적으로 링크 안하고 js파일의 웹경로를 넣어도 가능. 이것을 CDN 이라함.

    /*    window.onload = function () {
            var p = document.getElementById('p1');
            p.onclick = function () {
                p.innerHTML = '<b>내용바꿔</b>';
            };
        };       JavaScript 방법.          */
        
        $(document).ready(function () {
            //jQuery 문법을 여기에 넣어야만 한다.
            $('#p1').click(function () {
                // $('#p1').html('<b>내용바꿔</b>'); 태그를 적용시킬려면 이렇게.
                $('#p1').text('<b>내용바꿔</b>');  //태그가 안먹고 그냥 나온다.
            });
        });
        $(function () {
             //jQuery 문법을 여기에 넣어야만 한다.

        });

        //둘다 이용가능.
    </script>
</head>
<body>
    <p id="p1">p태그 하나.</p>
</body>

4. jQuery 선택자
jQuery 라이브러리 중 가장 중요한 파트이다. HTML element를 다루거나 찾거나 할 때 이용.
Id나 class, 태그이름에 기초하여 선택된다.

ex>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () { //콜백함수
            $('*').css('color', 'blue').css('margin', '20px'); //배운 모든 선택자 쓸수있음
          //  $('*').css('color', 'blue'); 위처럼 여러번 가능.
            //   $('*').css('margin', '20px'); 아래처럼 각자 가능.
            $('p').click(function () {
                $(this).hide(); // this = 현재구동되는 객체자신.
            }); //숨김.

            $('#hideP1').click(function () {
                $('#p1').hide();
            });
            $('#hidePtag').click(function () {
                $('p').hide();
            });
            $('#showPtag').click(function () {
                $('p').show('fast');
            });
            
        });
    </script>
</head>
<body>
    <h1>이곳은 heading</h1>
    <p>이 p태그를 클릭하면 숨겨져요</p>
    <p>이 p태그를 클릭하면 숨겨져요</p>
    <p id="p1">이 p1 하나만 숨겨요</p>
    <button id="hideP1">p1 하나만 숨겨요</button>
    <button id="hidePtag">p태그 다 숨겨요</button>
    <button id="showPtag">p태그 다 보여요</button>
</body>

+ex> toggle
    <title></title>
    <style>
        #show {
            width:100px; height:100px; background-color:aquamarine;
            border-radius:10px;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $("button").click(function () {
                $('#show').toggle('slow');  //fast 빨리 나타나는 ,  slow 느리게 나타나는
            });
            $('#goShow').click(function () {
                $('#show').show('fast');
            });
            $('#goHide').click(function () {
                $('#show').hide();  //fast 빨리 나타나는 ,  slow 느리게 나타나는 넣을꺼면 넣고 말꺼면 말고.
            });
        });

    </script>
</head>
<body>
    <button>토글링</button>
    <h1 id="goShow">보이게</h1>
    <h1 id="goHide">사라진</h1>
    <div id="show"></div>
</body>

Class는 여러 개일 수 있으나 id는 한문서안에 오직 하나만 있어야 한다.
기본 CSS 셀렉터
$(*) 모든 엘리먼트
$(this) 현재 선택된 HTML 엘리먼트
$(“p.intro”) p태그 중 intro class
$(“p:first”) p 태그 중 첫번째 엘리먼트
$(“ul li:first-child”) ul마다의 처음 li만
$(“[href]”) 웹문서 내의 href속성을 갖는 모든 엘리먼트 link, a등
$(“a[target=’_blank’]”) target속성으로 _blank를 갖는 a태그만
$(“a[target!=’_blank’]”) target속성으로 _blank가 아닌 a태그만

$(“:button”) 문서내 button. input안의 type이 button
$(“tr:even”) 테이블에서 짝수번째 행
$(“tr:odd”) 테이블에서 홀수번째 행

$(‘input[name=”name01”]’).val(“xx”); input태그 중 name이 “name01”
$(“input[type!=’password’]”).val(“”);

E[A=v]
E[A~=v] 해당 값이 특정 단어로 시작
E[A^=v] attribute가 v로 시작하는 E
E[A$=v] attribute가 v로 끝나는 E

E>F E의 바로 아래 F 엘리먼트
E+F E의 형제 엘리먼트로 바로 다음 형제 F 엘리먼트
E~F E의 형제 엘리먼트로 다음에 나오는 모든 F 엘리먼트
E:has(F) 엘리먼트 F의 자손을 하나 이상 가지고 있는 E 모든 엘리먼트
E.C       클래스명 C를 가지고 있는 모든 E 엘리먼트

$(“select > option:selected”).val(“”); 선택되어진 것만 값을 변경

기타 filter 요소들
요소:disabled → 비활성화된 입력 양식 선택
	$(“input:disabled”)

요소:enabled → 활성화된 입력 양식 선택
	$(“input:enabled”).val(“입력준비완료”)

요소:focus → 포커스 즉 클릭하는 순간 처리할 내용
	$(input:focus).val(“”); //포커스하면 기존 데이터 사라짐
	주로 list 형식 : tr, td, h1, li 등은 아래의 위치에 관련된 선택자를 많이 쓸 수 있다.

요소:odd → 홀수 번째 위치한 문서 객체 선택
	$(“tr:odd”).css(“background”,”red”);

요소:even → 짝수 번째 위치한 문서 객체 선택
요소:fist → 첫번째 위치한 문서 객체 선택
요소:last → 첫번째 위치한 문서 객체 선택
	함수 필터 선택자

요소:eq(n): 요소들 중 n번째
요소:contains(‘문자열’) : 특정 문자열을 포함한 내용의 객체를 선택
요소:nth-child(Kn+1) : k단위로 해당요소의 내용을 반복으로 처리하고자 할 때 활용

기타는 이곳(http://www.w3schools.com/jquery/jquery_ref_selectors.asp) 참조

ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(function () { //document.ready(); 로 하나 이렇게 하나 상관무.
            $('#msg').html('<b>Hello,jQuery</b>');
            //$('#msg').text('Hello,jQuery'); 태그가 없어서 위아래 결과는 같다.
            $('input[name = "msg"]').val('Hello, R'); 

         //   var msg = $('#msg').html(); //<b>Hello,jQuery</b >
         //   var msg = $('#msg').text(); // Hello,jQuery
            var msg = $('input[type=text]').val(); // Hello,jQuery   //input[type=""text"] "" 유무 상관x
            alert(msg);
            $('input[type="text"], input[type=password]').focus(function () {
                $(this).css('background-color', 'green').css('color', 'red');
                //자바스크립트를 쓸려면 $(function) 밖에다.
            });
            $('input[type=text], input[type=password]').blur(function () {
                //focus를 잃었을때 하는. blur
                $(this).css('background-color', 'white').css('color', 'black');
            });
        });

    </script>
</head>
<body>
    <p id="msg"></p>
    <p>메세지 <input type="text" name="msg" /></p>
    <p>비밀번호 <input type="password" max="pw" /></p>
    <p>선택1 <input type="radio" /></p>
    <p>선택1 <input type="checkbox" /></p>
</body>

필터 선택자 ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('tr:even').css('backgroundColor', '#cccccc'); //0번째 부터 시작해서 짝수라 인식함.
            $('tr:odd').css('background-color', 'lightblue'); 
            $('tr:nth-child(3n)').css('color', 'yellow'); //1번째 부터.
            $('tr:nth-child(3n+1)').css('color', 'green');
            $('tr:nth-child(3n+2)').css('color', 'blue');
            $('tr:eq(0)').css('background-color', 'black').css('color', 'white'); //jQuery에서만 가능.
        });
    </script>
</head>
<body>
    <table>
        <tr><th>이름</th><th>혈액형</th><th>지역</th></tr>
        <tr><td>홍길동</td><td>A</td><td>서울</td></tr>
        <tr><td>신길동</td><td>B</td><td>인천</td></tr>
        <tr><td>박길동</td><td>O</td><td>부산</td></tr>
        <tr><td>이길동</td><td>AB</td><td>대구</td></tr>
        <tr><td>최길동</td><td>O</td><td>경기</td></tr>
    </table>
</body>

eq(n) 이용한 ex>
 <title></title>
    <style>
        tr:hover{
            background-color:orange;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('tr').click(function () {
                var no = $(this).children(0).eq(0).text();
                // alert(no);
                if (isNaN(Number(no))) {
                    //맨위 타이틀을 클릭한 경우.
                } else {
                    //해당 글번호 생세보기 페이지로 넘어감.
                    location.href = '4.selector(jQuery에서만 가능한).html?no=' + no;
                }
            });
        });
    </script>
</head>
<body>
    <table>
        <tr><th>글번호</th><th>글제목</th><th>글쓴이</th><th>조회수</th></tr>
        <tr><td>4</td><td>제목1</td><td>길동</td><td>11</td></tr>
        <tr><td>3</td><td>제목2</td><td>길우</td><td>12</td></tr>
        <tr><td>2</td><td>제목3</td><td>동아</td><td>300</td></tr>
        <tr><td>1</td><td>제목4</td><td>육아</td><td>7</td></tr>
    </table>
</body>


5. 배열 객체 관리

A. for, for-in
B. jQuery에는 배열을 손쉽게 관리하기 위하여 .each()메서드를 사용합니다.
$.each(배열객체, function(index, item){
	index 활용, 배열 안에 있는 단위 item로 활용
});
$(배열객체).each(function(index, item){
	
});

ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            var array = [{ name: '가메출판사', link:'http://www.kame.co.kr' },
                { name: '네이버', link:'http://www.naver.com' },
                { name: '구글', link:'http://www.google.com' },
                { name: '다음', link:'http://www.daum.net' },
            ];
         //   array.forEach(function (item, idx)
         //   가능하나 로직이 많이 복잡해진다.
         //   });

            //위 로직이나 아래로직이나 같음.
            $.each(array, function (idx, item) {  //forEach 와 다른점은 item, idx 의 위치말고는 없다.
                $('body').html($('body').html()+'<h2><a href="' + item.link + '">' + item.name + '</a><h2>'); //"'+array[idx].link+'"
            });//이렇게하면 최종적인 마지막 결과만 나온다 그래서 이렇게 추가함. ($('body').html()+'<h2> ~)
            $(array).each(function (idx, item) {
                $('body').append('<h2><a href="' + item.link + '">' + item.name + '</a><h2>'); //.append = ($('body').html()+'<h2> ~) 결과는 같다.
            });
        });
    </script>
</head>

addClass()메소드는 문서객체에 class속성을 추가하는 메소드 ex>
    <title></title>
    <style>
        table td{
            width:100px; height:100px;
            background-color:#aaffaa;
        }
        .tdRed{
            background-color:red;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(function () { 
            $('td').on('click', function () { // on : => click(); 쓴것처럼
                $('td').removeClass('tdRed'); //모든 td 원상 복구.
                $(this).addClass('tdRed'); //클릭한 td .tdRed class 추가(빨간바탕.)
            });

        });
    </script>
</head>
<body>
    <table>
        <tr><td></td><td></td></tr>
        <tr><td></td><td></td></tr>
    </table>
</body>


6. jQuery 이벤트 메소드
- jQuery는 HTML 페이지내에서 이벤트 처리를 할 수 있는 최적화된 라이브러리
이벤트란 서로 다른 방문자들이 하는 행동에 대해서 웹 페이지는 다르게 응대할 수 있다. 어떤 행동이 일어나는 순간을 이벤트라 한다. 이벤트의 예는 
Mouse events : click, dbclick, mouseenter, mouseleave, hover(mouseenter, mouseleave 한번에)
Keyboard events : keypress, keydown, keyup
Form events : submit, change, focus, blur(포커스를 잃었을 때)
Document/window event : load, resize, scroll, unload

- 이벤트 연결 제거는 $(객체).off() : 현재 연결된 이벤트를 제거 처리

ex> 
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <style>
        .red {
            color:red;
        }
        .blue{
            color:blue;
        }
    </style>
    <script>
        $(document).ready(function () {
            var h1Cnt = 0; 

            $('#h1').click(function () { //'<font color="red">♥</font>' 스타일시트에서 조정.
                h1Cnt++;
                if (h1Cnt < 6) { //6이 되는순간.
                    $(this).prepend('♥').css('color', 'red');   //<span>하트</span> 해서 상단 스타일에서 해도 댐.
                    $(this).append('<span class="blue">♥</span>');
                } else {
                    $('#h1').off(); //this = '#h1' 가능. 클릭한 횟수가 6회가 되면 이벤트 제거.
                }
            });
            $('#h2').click(function () {
                $(this).prepend('<span class="red">＆</span>');   
                $(this).append('<span class="blue">＆</span>');

            });
            setInterval(function () {
                $('#h1').trigger('click'); //3초마다 강제 클릭 이벤트 발생.

            }, 3000);
        });
    </script>
</head>
<body>
    <h1 id="h1">start1 : </h1>
    <h1 id="h2">start2 : </h1>
</body>


- 이벤트 한번만 처리 : $(객체).one(‘이벤트명’,처리할 함수);

ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(function () {

            /*$('h2').click(function () {
                $(this).append('＠').prepend('§');
                $(this).off();  상단의 로직과 하단의 로직이 같다.
            }); */

            $('h2').one('click', function () { //이벤트 한번 수행후 제거.
               
                $(this).append('＠').prepend('§'); //한번에 가능. 즉, 옆에다 연장 가능.
            });

        });
    </script>
</head>
<body>
    <h2>방탄 좋아요. 클릭은 한번만</h2>
    <h2>기생충도 클릭은 한번만</h2>
</body>


- $(selector).change() : 선택된 element에 대해 change이벤트를 (강제로) 일으킨다.
= element의 값이 change되었을때, change 이벤트 발생 (이때, element는 <inupt> <textarea> <select>만 해당됨)
ex>
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('input[name="pwChk"], input[name = "pw"]').keyup(function () {  //.keyup  <= .change 의 단점. 포커스가 벗어나야 확인가능.
                var pw = $('input[name="pw"]').val();
                var pwChk = $('input[name="pwChk"]').val();
                if (pw == pwChk) {
                    $('.result').html('<b>두 비밀번호가 일치합니다.</b>');
                } else {
                    $('.result').html('<b>비밀번호가 일치하지 않습니다.</b>');
                }
            });
        });
    </script>
</head>
<body>
    <p>아이디<input type="text" name="name" /></p>
    <p>비밀번호<input type="password" name="pw" /></p>
    <p>비번확인<input type="password" name="pwChk" /></p>
    <p class="result"></p>
</body>


- 이벤트 객체 속성
event.pageX : 브라우저 단위 마우스의 x 좌표 위치
event.pageY : 브라우저 단위 마우스의 y 좌표 위치
$(객체).offset() : 객체의 위치값을 가져옴.
	left : 왼쪽으로부터 위치
	right : 오른쪽으로부터 위치

<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8" />
  <title></title>
  <style>
    canvas{width:100%; height:400px; border:1px solid blue;}
    img{width:50px; position:absolute; left:10px; top:10px;}
  </style>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script>
    $(document).ready(function () {
      $('canvas').mousedown(function () {
        $('input[name=xPosition]').val(event.pageX);
        $('input[name=yPosition]').val(event.pageY);
        var img = $('img').offset();
        $('input[name=xPosition2]').val(img.left);
        $('input[name=yPosition2]').val(img.top);
        $('img').css('top', event.pageY-25);
        $('img').css('left', event.pageX-25);
      });
    });
  </script>
</head>
<body>
  <canvas></canvas>
  <p>x좌표 : <input type="text" name="xPosition"></p>
  <p>y좌표 : <input type="text" name="yPosition"></p>
  <img id="im" src="img/diamond.png" />
  <fieldset>
    <legend>그림이 전에 있던 좌표</legend>
    <p>전 x좌표 : <input type="text" name="xPosition2" /></p>
    <p>전 y좌표 : <input type="text" name="yPosition2" /></p>
  </fieldset>
</body>
</html>


- 이벤트 연결 부분 한정
이벤트 연결 범위 : 초기 화면에서 만들어진 html과 jQuery로 만들어진 html내용의 차이에 의해서 event 범위가 차이가 나는 경우가 있다.
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style type="text/css"></style>
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script>
	$(document).ready(function() {
		// append()나 html()로 추가된 h1은 이벤트 발생 안 함
		$('h1').on('click',function(){
			var length = $('h1').length;
			$('#wrap1').append("<h1> 길이 : "+length + " 오후와 함께</h1>");
		});
		// $(객체).on(이벤트, 추가될 내용포함tag, 처리할 함수);
		// jQuery 1.10이상이 버전에서만 가능
		// jQuery 1.9 버전 이전에서는 아래처럼 사용
		// $(객체).band(현재/미래 존재객체만) 
		$('#wrap2').on('click','h2',function(){
			var length = $('h2').length;
			$('#wrap2').append("<h2> 길이 : "+length + " 오후와 함께</h2>");
		});
	});
</script>
</head>
<body>
	<div id="wrap1"><h1>화이팅~</h1></div>
	<div id="wrap2"><h2>오후 시간</h2></div>
</body>
</html>

- .attr() 함수.

ex>
    <title></title>
    <style>
        table td{
            width:100px; height:100px; background-color:aqua;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(function () {
            $('td').click(function () {
                var who = $(this).attr('class'); // attr : class 속성값만 가져오기 
                // who = $(this).text(); tr.td의 text값만 가져오기.
                $('.result').html('당신은 ' + who + '를(을) 선택');
            });


        });
    </script>
</head>
<body>
    <table>
        <tr><td class="kim">KIM</td><td class="lee"></td></tr>
        <tr><td class="park">PARK</td><td class="choi"></td></tr>

    </table>
    <p class="result"></p>
</body>

ex2> 이미지를 활용한 예제.
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('img').mousedown(function () {
                $(this).attr('src', 'img/but2.gif'); //src 속성을 원하는 이미지로.
                $(this).attr('alt','마우스 눌렀을때');
            });
            $('img').mouseup(function () {
                $(this).attr('src', 'img/but1.gif');
                $(this).attr('alt', '클릭 전');
            });

        });
    </script>
</head>
<body>
    <img src="img/but1.gif" alt="클릭 전" />
</body>


ex3> 메뉴 바꾸기.
    <title></title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        $(document).ready(function () {
            $('img').mouseover(function () {
                var idx = $(this).attr('src').substring(4, 5);
                $(this).attr('src', 'img/' + idx + 'over.jpg');
            });

            $('img').mouseout(function () {
                var idx = $(this).attr('src').substring(4, 5);
                $(this).attr('src', 'img/' + idx + 'out.jpg');
            });

        });
    </script>
</head>
<body>
    <img src="img/0out.jpg" />
    <img src="img/1out.jpg" />
    <img src="img/2out.jpg" />
    <img src="img/3out.jpg" />
</body>
